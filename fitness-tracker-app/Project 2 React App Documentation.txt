Dependencies Installation (Will be edited to Requirements.txt)

In project root directory:
To start app: npm start
For routing : npm install react-router-dom -- learn 
For state management :ã€€npm install redux react-redux (If I choose Redux) -- learn 
For fetching resources from backend: npm install axios react-router-dom


In server directory: 
To start backend server: node index.js
For server framework : npm install express
For PostgreSQL database: npm install pg - To secure transactions 
For parsing incoming request bodies : npm install body-parser
For environment variables: npm install dotenv
For password hashing: npm install bcryptjs bcryypt
For handling JWTs: npm install jsonwebtoken - To check integrity and authentication
For cors: npm install cors
For input validation: npm install joi
For testing : npm install --save-dev jest supertest - To check HTTP servers
For email server: npm install nodemailer - Later SendGrid or Mailgun for better reliablilty and deliverability

Project directory (suscept to changes)

PERSONAL-FITNESS-TRACKER/
|--fitness-tracker-app/
|   |--node_modules/
|   |--public/
|   |--server/
|   |   |--config/
|   |   |   |--db.js                     # Database connection configuration               
|   |   |--validation/
|   |   |   |--userValidation.js         # Input validation for authController funcs        DONE
|   |   |   |--activityValidation.js     # Input validation for activityController funcs    DONE
|   |   |--controllers/
|   |   |   |--authController.js         # Authentication logic                             DONE 
|   |   |   |--activityController.js     # Basic activity tracking operations               DONE
|   |   |   |--workoutController.js      # Workout logs operations                          NOT DONE
|   |   |   |--dietController.js         # Diet tracking operations                         NOT DONE
|   |   |   |--waterIntakeController.js  # Water intake tracking                            NOT DONE
|   |   |   |--planController.js         # Workout plan operations                          NOT DONE
|   |   |   |--subscriptionController.js # Manage subscription and premium features         NOT DONE
|   |   |   |--userController.js         # Getting and updating user info                   NOT DONE
|   |   |   |--paymentController.js      # Processing payment                               NOT DONE
|   |   |--models/
|   |   |   |--User.js                   # User model (Register, Delete, PasswordReset)     DONE
|   |   |   |--UserActivity.js           # User Activity model (Create activity by user)    DONE
|   |   |   |--Activity.js               # Model for admins to create types of actvities    DONE
|   |   |   |--Workout.js                # Workout log model                                NOT DONE
|   |   |   |--Diet.js                   # Diet log model                                   NOT DONE
|   |   |   |--WaterIntake.js            # Water intake model                               NOT DONE
|   |   |   |--Plan.js                   # Workout plan model                               NOT DONE
|   |   |--routes/
|   |   |   |--userRoutes.js             # Routes for user profile and settings             DONE
|   |   |   |--activityRoutes.js         # Routes for activity tracking                     DONE
|   |   |   |--workoutRoutes.js          # Routes for workout logs                          NOT DONE
|   |   |   |--dietRoutes.js             # Routes for diet tracking                         NOT DONE
|   |   |   |--waterIntakeRoutes.js      # Routes for water intake tracking                 NOT DONE
|   |   |   |--planRoutes.js             # Routes for accessing workout plans               NOT DONE
|   |   |   |--subscriptionRoutes.js     # Routes for managing subscriptions                NOT DONE
|   |   |--middleware/
|   |   |   |--verifyToken.js            # For authentication and authorization             DONE
|   |   |   |--adminCheck.js             # For verifying a user as an admin                 DONE
|   |   |   |--premiumCheck.js           # For verifying if user has premium                NOT DONE
|   |   |--utils/
|   |   |   |--apiResponse.js            # Utility for standardizing API responses          DONE
|   |   |   |--makeUserAdmin.js          # For making a user admin                          DONE
|   |   |   |--emailService.js           # Utility to send emails to users                  DONE
|   |   |--tests/
|   |   |   |--auth.test.js              # For testing user auth logics                     DONE
|   |   |   |--emailService.test.js      # For testing email services                       DONE
|   |   |   |--activity.test.js          # For testing activity logics                      DONE
|   |   |--node_modules/
|   |   |--.env                       # Environment variables
|   |   |--index.js                   # Main server file
|   |   |--package-lock.json          
|   |   |--package.json                 
|   |--src/
|   |   |--components/                  # Reusable UI Components
|   |   |   |--Navbar/
|   |   |   |--Footer/
|   |   |   |--ActivityTracker/
|   |   |   |--WorkoutLogger/
|   |   |   |--DietTracker/
|   |   |   |--WaterTracker/
|   |   |   |--WorkoutPlan/
|   |   |   |--Subscription/
|   |   |--pages/                       # Components representing entire pages
|   |   |   |--Home.js
|   |   |   |--Dashboard.js
|   |   |   |--Settings.js
|   |   |   |--Login.js
|   |   |   |--PasswordReset.js
|   |   |   |--PasswordResetRequest.js
|   |   |   |--Signup.js
|   |   |   |--Premium.js               # Page for premium feature introduction and subscription
|   |   |--services/                    # Services for HTTP requests (e.g., authentication, fetching data)
|   |   |   |--authService.js
|   |   |   |--activityService.js
|   |   |   |--workoutService.js
|   |   |   |--dietService.js
|   |   |   |--waterService.js
|   |   |   |--planService.js
|   |   |   |--userService.js
|   |   |   |--subscriptionService.js   # Service for managing subscriptions
|   |   |--hooks/                       # React hooks
|   |   |--context/                     # Context API for global state management
|   |   |   |--AuthContext.js
|   |   |   |--UserContext.js           # Manage user data and state
|   |   |--App.js                       # Main application component
|   |   |--index.js                     # Entry point for React, renders App component
|   |   |--index.css                    
|   |--.gitignore
|   |--package-lock.json
|   |--package.json


Features

Free Features

Basic Activity Tracking: Steps, distance, calories burned, active minutes
Workout Logs: Users can log their workouts manually, choosing from a list of activities
Basic Diet Tracking: Calorie counting and simple food logging
Water Intake Tracking: To encourage hydration
Limited Access to Workout Plans: Offer some generic workout plans for different goals (weight loss, muscle gain, etc.)

Premium Features

Personalized workout plans: Tailored to the user's fitness level, goals, and preferences. Include AI or expert-created plans that adapt over time
Advanced Diet Planning and Tracking: Custom meal plans, nutrition advice, macro tracking, and integration with popular food tracking 
Advanced Analytics and Insights: More in-depth analysis of performance, health trends, and predictive suggestions based on the user's activity and goals
Mindfulness and Wellness Content: Access to meditation, yoga sessions, and wellness articles to support mental health
Sleep Tracking and Analysis: Advanced features for monitoring sleep patterns and providing improvement suggestions

Cross-origin resource sharing (CORS) is an extension of the same-origin policy. You need it for authorized resource sharing with external third parties. For example, you need CORS when you want to pull data from external APIs that are public or authorized