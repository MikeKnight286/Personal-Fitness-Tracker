Dependencies Installation (Will be edited to Requirements.txt)

In project root directory:
To build app: npm run build
To start app: npm start
For routing : npm install react-router-dom -- learn 
For state management :ã€€npm install redux react-redux (If I choose Redux) -- learn 
For fetching resources from backend: npm install axios react-router-dom

In server directory: 
To start backend server: node index.js
For server framework : npm install express
For PostgreSQL database: npm install pg - To secure transactions 
For parsing incoming request bodies : npm install body-parser
For environment variables: npm install dotenv
For password hashing: npm install bcryptjs bcryypt
For handling JWTs: npm install jsonwebtoken - To check integrity and authentication
For cors: npm install cors
For input validation: npm install joi
For testing : npm install --save-dev jest supertest - To check HTTP servers
For email server: npm install nodemailer - Later SendGrid or Mailgun for better reliablilty and deliverability

Project directory (suscept to changes)

PERSONAL-FITNESS-TRACKER/
|--fitness-tracker-app/
|   |--node_modules/
|   |--public/
|   |--server/
|   |   |--config/
|   |   |   |--db.js                     # Database connection configuration               
|   |   |--validation/
|   |   |   |--userValidation.js         # Input validation for authController funcs        DONE
|   |   |   |--activityValidation.js     # Input validation for activityController funcs    DONE
|   |   |   |--dietValidation.js         # Input validation for dietController funcs        DONE
|   |   |   |--workoutplansValidation.js # Input validation for workoutplansController      DONE
|   |   |--controllers/
|   |   |   |--authController.js         # Authentication logic                             DONE 
|   |   |   |--userController.js         # Getting and updating user info                   DONE
|   |   |   |--activityController.js     # Basic activity tracking operations               DONE
|   |   |   |--dietController.js         # Diet tracking operations                         DONE 
|   |   |   |--workoutplansController.js # Workout plan operations                          DONE
|   |   |   |--waterIntakeController.js  # Water intake tracking                            NOT DONE
|   |   |   |--subscriptionController.js # Manage subscription and premium features         NOT DONE
|   |   |   |--paymentController.js      # Processing payment                               NOT DONE
|   |   |--models/
|   |   |   |--User.js                   # User model (Register, Delete, PasswordReset)     DONE
|   |   |   |--UserActivity.js           # User Activity model (Create activity by user)    DONE
|   |   |   |--Activity.js               # Model for admins to create types of actvities    DONE
|   |   |   |--Diet.js                   # Diet log model                                   DONE
|   |   |   |--WorkoutPlans.js           # Available workout plans model                    DONE
|   |   |   |--WorkoutPlans.js           # User's linked workout plan model                 DONE
|   |   |   |--WaterIntake.js            # Water intake model                               NOT DONE
|   |   |--routes/
|   |   |   |--userRoutes.js             # Routes for user profile and settings             DONE
|   |   |   |--activityRoutes.js         # Routes for activity tracking                     DONE
|   |   |   |--dietRoutes.js             # Routes for diet tracking                         DONE
|   |   |   |--workoutplansRoutes.js     # Routes for admin editing workout plans           DONE
|   |   |   |--userworkoutplansRoutes.js # Routes for user using workout plans              DONE
|   |   |   |--waterIntakeRoutes.js      # Routes for water intake tracking                 NOT DONE
|   |   |   |--subscriptionRoutes.js     # Routes for managing subscriptions                NOT DONE
|   |   |--middleware/
|   |   |   |--verifyToken.js            # For authentication and authorization             DONE
|   |   |   |--adminCheck.js             # For verifying a user as an admin                 DONE
|   |   |   |--premiumCheck.js           # For verifying if user has premium                NOT DONE
|   |   |--utils/
|   |   |   |--makeUserAdmin.js          # For making a user admin                          DONE
|   |   |   |--emailService.js           # Utility to send emails to users                  DONE
|   |   |--tests/
|   |   |   |--auth.test.js              # For testing user auth logics                     DONE
|   |   |   |--diet.test.js              # For testing user diet tracking logics            DONE
|   |   |   |--emailService.test.js      # For testing email services                       DONE
|   |   |   |--activity.test.js          # For testing activity logics                      DONE
|   |   |   |--workoutplans.test.js      # For testing workout plans logics                 DONE
|   |   |--node_modules/
|   |   |--.env                          # Environment variables
|   |   |--index.js                      # Main server file
|   |   |--package-lock.json          
|   |   |--package.json                 
|   |--src/
|   |   |--components/                   
|   |   |   |--Navbar/                                                          
|   |   |   |   |--NavBar.js                                                                REQUIRES UPDATES
|   |   |   |--Footer/                                                                      NOT DONE
|   |   |   |--ActivityTracker/
|   |   |   |   |--ActivitiesList.js     # For showing available activites                  DONE
|   |   |   |   |--AddUserActivity.js    # For user logging his activites                   DONE
|   |   |   |   |--CreateActivity.js     # For admin creating new activities                DONE
|   |   |   |   |--UserActivitesList.js  # For showing user logged activiites               DONE     
|   |   |   |--DietTracker/                                                             
|   |   |   |   |--DietList.js           # For showing user logged diet list (delete func)  DONE
|   |   |   |   |--AddDietEntry.js       # For user logging his diets                       DONE
|   |   |   |   |--UpdateDietEntry.js    # For updating user logged diets                   DONE                                                           
|   |   |   |--WaterTracker/                                                                NOT DONE
|   |   |   |--WorkoutPlan/                                                                 NOT DONE
|   |   |   |--Subscription/                                                                NOT DONE
|   |   |--pages/                        
|   |   |   |--Home.js
|   |   |   |--ActivityLog.js            # Page for showing activity features               DONE
|   |   |   |--DietLog.js                # Page for showing diet tracking features          DONE
|   |   |   |--Dashboard.js                                                                 NOT DONE
|   |   |   |--Settings.js                                                                  NOT DONE
|   |   |   |--Login.js                                                                     DONE
|   |   |   |--PasswordReset.js                                                             DONE
|   |   |   |--PasswordResetRequest.js                                                      DONE
|   |   |   |--Signup.js                                                                    DONE
|   |   |   |--Premium.js                                                                   NOT DONE
|   |   |--services/                     
|   |   |   |--authService.js           # Services for authentication, setting session      DONE
|   |   |   |--activityService.js       # Services for activity                             DONE
|   |   |   |--dietService.js           # Services for diet tracking                        DONE
|   |   |   |--waterService.js
|   |   |   |--planService.js
|   |   |   |--userService.js
|   |   |   |--subscriptionService.js   # Service for managing subscriptions
|   |   |--hooks/      
|   |   |   |--useAuth.js               # Using auth context with this hook                
|   |   |--context/                     # Context API for global state management
|   |   |   |--AuthContext.js           # For setting sessions for user auths
|   |   |--App.js                       # Main application component
|   |   |--index.js                     # Entry point for React, renders App component
|   |   |--index.css                    
|   |--.gitignore
|   |--package-lock.json
|   |--package.json


!!! Currently user has to log activity manually. Will make it so that it can track the activity passicely !!!

!!! Requires reformatting the workout plan features !!! Current issues: Premium users can create their own plans but need moderation by admin, Need seperate functions for updating so that it does not affect original existing plan when user update his linked one due to cirumstances

Features

Free Features

Basic Activity Tracking: Steps, distance, calories burned, active minutes
Workout Logs: Users can log their workouts manually, choosing from a list of activities
Basic Diet Tracking: Calorie counting and simple food logging
Water Intake Tracking: To encourage hydration
Limited Access to Workout Plans: Offer some generic workout plans for different goals (weight loss, muscle gain, etc.)

Premium Features

Personalized workout plans: Tailored to the user's fitness level, goals, and preferences. Include AI or expert-created plans that adapt over time
Advanced Diet Planning and Tracking: Custom meal plans, nutrition advice, macro tracking, and integration with popular food tracking 
Advanced Analytics and Insights: More in-depth analysis of performance, health trends, and predictive suggestions based on the user's activity and goals
Mindfulness and Wellness Content: Access to meditation, yoga sessions, and wellness articles to support mental health
Sleep Tracking and Analysis: Advanced features for monitoring sleep patterns and providing improvement suggestions

Cross-origin resource sharing (CORS) is an extension of the same-origin policy. You need it for authorized resource sharing with external third parties. For example, you need CORS when you want to pull data from external APIs that are public or authorized